name: shiga_menu_seikyo
on:
#  push:
#    branches:
#      - main
  schedule:
    - cron: '0 22 * * 0' # 日曜日の22時 (UTC) = 月曜日の7時 (JST)
    # 毎週火曜日の6:00 +9=jst15時に実行
    #- cron: '0 6 * * 2'

    
  workflow_dispatch:

permissions:
  contents: write   # リポジトリに対して書き込み(コミット)権限を持たせる

jobs:
  build:  
    runs-on: ubuntu-latest
    steps:
      # (1) リポジトリをクローンし、プッシュできる資格情報を保持する
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          persist-credentials: true  # push するために GitHub token を継続使用
          fetch-depth: 0  # リモートの完全な履歴を取得（rebaseやマージに必要）

      # (2) 環境インストール
      - name: Install Google Chrome
        run: |
          set -eux
          # 1) 必要ツールインストール
          sudo apt-get update -yqq
          sudo apt-get install -yqq wget curl gnupg --no-install-recommends

          # 2) GoogleのGPG鍵をバイナリ形式で保存 (apt-key非推奨対策)
          sudo mkdir -p /usr/share/keyrings
          curl -fsSL https://dl.google.com/linux/linux_signing_key.pub \
            | gpg --dearmor \
            | sudo tee /usr/share/keyrings/google-chrome.gpg > /dev/null

          # 3) Google Chromeリポジトリ追加
          echo "deb [arch=amd64 signed-by=/usr/share/keyrings/google-chrome.gpg] https://dl.google.com/linux/chrome/deb/ stable main" \
            | sudo tee /etc/apt/sources.list.d/google-chrome.list

          sudo apt-get update -yqq
          sudo apt-get install -yqq google-chrome-stable --no-install-recommends

          # (任意) キャッシュ削減
          sudo rm -rf /var/lib/apt/lists/*

      #資源インストール
      - name: Install Selenium (with Manager)
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          # 例として最新版近辺を指定。Selenium 4.6以上ならManager搭載
      # (4) スクリプト実行
      - name: Run shiga_menu
        run: |
          python shiga_menu.py

   # (5) リモートの更新を取り込み（rebase）
      #     → リモートに新しいコミットがあっても、こちらの変更を上書きせず履歴をきれいに融合
      - name: Pull latest changes (rebase)
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "github-actions"

          # スタッシュしてリモート更新を取り込む（未コミットの変更がある場合の対策）
          git stash || echo "No local changes to stash"
          git pull --rebase origin main
          git stash pop || echo "No stashed changes to apply"

      # (6) CSV をコミット＆プッシュ
      - name: Commit and push CSV
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "github-actions"

          git add shiga_menu.csv
          git commit -m "Add/Update CSV data from GitHub Actions" || echo "No changes to commit"
          git push origin HEAD || echo "No changes to push"
